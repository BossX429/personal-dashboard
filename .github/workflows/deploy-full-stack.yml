name: Deploy Java + Node.js Stack to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NODE_NAME: personal-dashboard-web
  AZURE_WEBAPP_JAVA_NAME: personal-dashboard-api
  CONTAINER_REGISTRY_NAME: personaldashboardacr
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    # Setup Java
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        cache: 'maven'
    
    # Build and test Node.js app
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Run Node.js tests
      run: npm test -- --passWithNoTests
    
    - name: Build Node.js application
      run: npm run build
    
    # Build and test Java app
    - name: Build Java application
      run: |
        cd java-services/dashboard-api
        mvn clean compile
    
    - name: Run Java tests
      run: |
        cd java-services/dashboard-api
        mvn test

  build-docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Login to Azure Container Registry
      run: |
        az acr login --name ${{ env.CONTAINER_REGISTRY_NAME }}
    
    - name: Build and push Java API image
      run: |
        cd java-services/dashboard-api
        docker build -t ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/dashboard-api:${{ github.sha }} .
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/dashboard-api:${{ github.sha }}
        docker tag ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/dashboard-api:${{ github.sha }} ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/dashboard-api:latest
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/dashboard-api:latest

  deploy:
    needs: [build-and-test, build-docker-images]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Build Node.js application
      run: npm run build
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Node.js Web App
    - name: Deploy Node.js to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NODE_NAME }}
        package: .
    
    # Deploy Java API App
    - name: Deploy Java API to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_JAVA_NAME }}
        images: ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/dashboard-api:latest